(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{211:function(t,a,s){"use strict";s.r(a);var e=s(0),n=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"lesson-9-dml-manipulating-data"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#lesson-9-dml-manipulating-data"}},[t._v("#")]),t._v(" Lesson 9 DML Manipulating Data")]),t._v(" "),s("p",[t._v("There are 3 things you can do:")]),t._v(" "),s("ol",[s("li",[t._v("add")]),t._v(" "),s("li",[t._v("change")]),t._v(" "),s("li",[t._v("delete")])]),t._v(" "),s("p",[t._v("they correspond to")]),t._v(" "),s("ol",[s("li",[t._v("insert")]),t._v(" "),s("li",[t._v("update")]),t._v(" "),s("li",[t._v("delete")])]),t._v(" "),s("ul",[s("li",[t._v("Control transactions – COMMIT SAVEPOINT ROLLBACK")])]),t._v(" "),s("h2",{attrs:{id:"what-is-dml-data-manipulation-language"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#what-is-dml-data-manipulation-language"}},[t._v("#")]),t._v(" What is DML? Data Manipulation Language")]),t._v(" "),s("p",[t._v("The sql that manipulates data.")]),t._v(" "),s("p",[t._v("EXAMPLE:\nStudent comes in to pay for tuition")]),t._v(" "),s("ol",[s("li",[t._v("Decrease the amount owing to Seneca")]),t._v(" "),s("li",[t._v("Increase the total amount collected for the day")]),t._v(" "),s("li",[t._v("Store copy of activity (transaction) in a journal")]),t._v(" "),s("li",[t._v("Add it to the end of day check list")]),t._v(" "),s("li",[t._v("Print a receipt")])]),t._v(" "),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"custom-block-title"},[t._v("Note")]),t._v(" "),s("p",[t._v("NOTE:\nSteps 1, 2, 3 and 4 must be completed before a transaction is complete.\nIf any one of them fails, then all actions must be undone.")])]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INSERT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INTO")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("table")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("column")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("column")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VALUES")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("value")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("value")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("ul",[s("li",[s("p",[t._v("Add new rows to a table by using the INSERT statement:")])]),t._v(" "),s("li",[s("p",[t._v("With this syntax, only one row is inserted at a time.")])])]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INSERT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INTO")]),t._v(" departments\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("department_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" department_name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" manager_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" location_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VALUES")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("70")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Public Relations'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1700")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])])]),s("ul",[s("li",[t._v("Enclose character and date values within single quotation marks.")])]),t._v(" "),s("h2",{attrs:{id:"insert-with-null-values"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#insert-with-null-values"}},[t._v("#")]),t._v(" Insert with null values")]),t._v(" "),s("p",[t._v("Implicit method: Omit the column from the column list.")]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INSERT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INTO")]),t._v(" departments "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("department_id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" department_name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" \n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VALUES")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("30")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Purchasing'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("The specific columns were stated in the INSERT\nThat means it knows where it goes. Could do it in different order")]),t._v(" "),s("p",[t._v("Explicit method: Specify the NULL keyword in the VALUES clause.")]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INSERT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INTO")]),t._v(" departments\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VALUES")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Finance'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("There are 4 columns in the table\nNone of the columns were mentioned\nso there needs to be 4 columns in the VALUES clause\nwith data that matches the columns info")]),t._v(" "),s("h2",{attrs:{id:"insert-by-copying-from-another-table"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#insert-by-copying-from-another-table"}},[t._v("#")]),t._v(" Insert by copying from another table")]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("insert")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("into")]),t._v(" salesrep "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("id"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("salary"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" commission_pct"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" employeeid"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("lastname"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("salary"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("commission_pct\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" employees\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" jobid "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("like")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'%REP%'")]),t._v("\n")])])]),s("div",{staticClass:"custom-block warning"},[s("p",{staticClass:"custom-block-title"},[t._v("Note")]),t._v(" "),s("ul",[s("li",[t._v("No VAUES clause")]),t._v(" "),s("li",[t._v("Number of columns must match")]),t._v(" "),s("li",[t._v("Data type must match")])])]),t._v(" "),s("h2",{attrs:{id:"update-modify-change-data"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#update-modify-change-data"}},[t._v("#")]),t._v(" Update modify/change data")]),t._v(" "),s("p",[t._v("General Syntax")]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("Update")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("table")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("column")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("value")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("column")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("value")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" condition"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("UPDATE")]),t._v(" \temployees\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SET")]),t._v(" \t\tdepartment_id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("50")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" \temployee_id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("113")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n")])])]),s("div",{staticClass:"custom-block danger"},[s("p",{staticClass:"custom-block-title"},[t._v("THIS IS DANGEROUS")]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("UPDATE")]),t._v(" employees\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SET")]),t._v(" department_id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("110")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- will set everything to 110 because where clause is missing, aka rollback time")]),t._v("\n")])])])]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("UPDATE")]),t._v(" \temployees\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SET")]),t._v(" \t\tjob_id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'IT_PROG'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("  \t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- one change")]),t._v("\ncommission_pct "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),t._v(" \t"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- two changes")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" \temployee_id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("114")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("p",[t._v("Update employee 113 with same data from another employee\nA) JOB ID SAME AS EMPLOYEE 205\nB) SALARY SAME AS 205")]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("UPDATE")]),t._v(" \temployees\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SET")]),t._v(" \t\tjob_id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" job_id\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" employees\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" employee_id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("205")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\nsalary "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SELECT")]),t._v(" salary\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" employees\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" employee_id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("205")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" \temployee_id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("113")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--easier way to copy")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("update")]),t._v(" employees\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("jobid"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" salary"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" jobid"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" salary "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" employees "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" employeeid "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("205")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\nemployeeid "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("113")]),t._v("\n")])])]),s("p",[t._v("What does this do?")]),t._v(" "),s("h2",{attrs:{id:"updating-rows-based-on-another-table"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#updating-rows-based-on-another-table"}},[t._v("#")]),t._v(" Updating rows based on another table")]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("update")]),t._v(" employees\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("set")]),t._v(" departmentid "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" departmentid "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" employees "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" employeeid "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" jobid "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" jobid "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" employees "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" employeeid "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("200")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--Changes all employees that have a job_id the same as employee 200 to have the same department ID as employee 100")]),t._v("\n\n")])])]),s("h2",{attrs:{id:"delete"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#delete"}},[t._v("#")]),t._v(" Delete")]),t._v(" "),s("h3",{attrs:{id:"allows-us-to-remove-specific-row-or-rows"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#allows-us-to-remove-specific-row-or-rows"}},[t._v("#")]),t._v(" allows us to remove specific row or rows")]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("delete")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" departments\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" departmentname "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Finanace'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("delete")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" employees\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" employeeid "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("115")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("delete")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" departments\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" departmentid "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("in")]),t._v("  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),s("div",{staticClass:"custom-block danger"},[s("p",{staticClass:"custom-block-title"},[t._v("no where = rollback")]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--deletes the data from the table")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("delete")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" employees"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])]),t._v(" "),s("h2",{attrs:{id:"rows-based-on-another-table"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#rows-based-on-another-table"}},[t._v("#")]),t._v(" Rows based on another table")]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("delete")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" employees\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" departmentid "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("select")]),t._v(" departmentid "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" departments "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("where")]),t._v(" departmentname "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("like")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'%Public%'")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h2",{attrs:{id:"truncate-statement"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#truncate-statement"}},[t._v("#")]),t._v(" Truncate statement")]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("truncate")]),t._v(" employees\n")])])]),s("h3",{attrs:{id:"why-used"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#why-used"}},[t._v("#")]),t._v(" WHY USED?")]),t._v(" "),s("ul",[s("li",[t._v("More efficient than DELETE")]),t._v(" "),s("li",[t._v("Delete checks all delete triggers")]),t._v(" "),s("li",[t._v("Truncate is a DDL statement and does not create a copy to allow for ROLLBACK")]),t._v(" "),s("li",[t._v("If the table is the parent you need to drop constraint of the FK to be able to do this")])]),t._v(" "),s("h2",{attrs:{id:"database-transactions-start-and-end"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#database-transactions-start-and-end"}},[t._v("#")]),t._v(" Database Transactions: Start and End")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("Begin when the first DML SQL statement is executed. - a statement that makes changes to the database - INSERT, UPDATE, DELETE")])]),t._v(" "),s("li",[s("p",[t._v("End with one of the following events:")])]),t._v(" "),s("li",[s("p",[t._v("A COMMIT or ROLLBACK statement is issued.")])]),t._v(" "),s("li",[s("p",[t._v("A DDL or DCL statement that executes with an automatic commit\nor")])]),t._v(" "),s("li",[s("p",[t._v("The user exits SQL Developer or SQL*Plus.")])]),t._v(" "),s("li",[s("p",[t._v("The system crashes.")])])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("COMMIT Ends last transaction making the pending data changes before the commit to be permanent")])]),t._v(" "),s("li",[s("p",[t._v("SAVEPOINT name\nSAVEPOINT name marks a savepoint within the current transaction")])]),t._v(" "),s("li",[s("p",[t._v("ROLLBACK\nROLLBACK ends the current transaction by discarding all pending data changes back to the last commit or the start of activity")])]),t._v(" "),s("li",[s("p",[t._v("ROLLBACK TO\nSAVEPOINT name ROLLBACK TO SAVEPOINT rolls back the current transaction to the specified savepoint, thereby discarding any changes and/or savepoints that were created after the savepoint to which you are rolling back. If you omit the TO SAVEPOINT clause, the ROLLBACK statement rolls back the entire transaction. Because savepoints are logical, there is no way to list the savepoints that you have created")])])]),t._v(" "),s("h2",{attrs:{id:"example"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#example"}},[t._v("#")]),t._v(" Example")]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("UPDATE")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SAVEPOINT")]),t._v(" update_done"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \t receive a message "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SAVEPOINT")]),t._v(" update_done succeeded\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INSERT")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ROLLBACK")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("TO")]),t._v(" update_done"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  receive a message "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ROLLBACK")]),t._v(" succeeded\n\n")])])]),s("h2",{attrs:{id:"state-of-data"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#state-of-data"}},[t._v("#")]),t._v(" State of Data")]),t._v(" "),s("h3",{attrs:{id:"_1-before-a-commit-or-rollback"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-before-a-commit-or-rollback"}},[t._v("#")]),t._v(" 1. Before a COMMIT or ROLLBACK")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("While making data changes (DML)")])]),t._v(" "),s("li",[s("p",[t._v("The previous state of the data can be recovered")])]),t._v(" "),s("li",[s("p",[t._v("The current state can be reviewed with the SELECT - make changes then use a select to see the results")])]),t._v(" "),s("li",[s("p",[t._v("Other users cannot see the effect of the DML changes - Each user sees the state the data was in at the last commit")])]),t._v(" "),s("li",[s("p",[t._v("Affected rows are locked")])]),t._v(" "),s("li",[s("p",[t._v("Other users cannot change the affected rows")])])]),t._v(" "),s("h3",{attrs:{id:"_2-after-a-commit"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-after-a-commit"}},[t._v("#")]),t._v(" 2. After a COMMIT")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("Data changes are saved in the database.")])]),t._v(" "),s("li",[s("p",[t._v("The previous state of the data is overwritten.")])]),t._v(" "),s("li",[s("p",[t._v("All users can view the results.")])]),t._v(" "),s("li",[s("p",[t._v("Locks on the affected rows are released;\nThose rows are available for other users to manipulate.")])]),t._v(" "),s("li",[s("p",[t._v("All savepoints are erased.")])])]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--Make some changes")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DELETE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" employees\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" employee_id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("99999")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INSERT")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("INTO")]),t._v(" departments\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("VALUES")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("290")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'Corporate Tax'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("NULL")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("1700")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("--Commit the changes –")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("COMMIT")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 1 Remove departments 290 and 300 in the DEPARTMENTS table")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 2 Update a row in the EMPLOYEES table.")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("-- 3 Save the data change.")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DELETE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" departments\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" department_id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("IN")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("290")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("300")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("UPDATE")]),t._v(" employees\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("SET")]),t._v(" department_id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("80")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("WHERE")]),t._v(" employee_id "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token number"}},[t._v("206")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("COMMIT")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n\n")])])]),s("h3",{attrs:{id:"discard-all-pending-changes-by-using-the-rollback-statement"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#discard-all-pending-changes-by-using-the-rollback-statement"}},[t._v("#")]),t._v(" Discard all pending changes by using the ROLLBACK statement:")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("Data changes are undone.")])]),t._v(" "),s("li",[s("p",[t._v("Previous state of the data is restored.")])]),t._v(" "),s("li",[s("p",[t._v("Locks on the affected rows are released.")])])]),t._v(" "),s("div",{staticClass:"language-sql extra-class"},[s("pre",{pre:!0,attrs:{class:"language-sql"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("DELETE")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("FROM")]),t._v(" employees"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("ROLLBACK")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n \n")])])])])}),[],!1,null,null,null);a.default=n.exports}}]);