(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{214:function(s,t,a){"use strict";a.r(t);var e=a(0),r=Object(e.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"lesson-6-using-sub-queries"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#lesson-6-using-sub-queries"}},[s._v("#")]),s._v(" Lesson 6 Using Sub-queries")]),s._v(" "),a("p",[s._v("Food for thought.")]),s._v(" "),a("p",[s._v("Give me a list of all employees that earn more than Haas")]),s._v(" "),a("h2",{attrs:{id:"defining-the-proper-question"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#defining-the-proper-question"}},[s._v("#")]),s._v(" Defining the proper question")]),s._v(" "),a("h3",{attrs:{id:"who-has-a-salary-greater-than-abel"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#who-has-a-salary-greater-than-abel"}},[s._v("#")]),s._v(" Who has a salary greater than Abel?")]),s._v(" "),a("p",[s._v("This question require us to know what Abel's salary is")]),s._v(" "),a("p",[s._v("Therefore, in order to answer which persons have a greater salary than Abel, we need to know what Abel's salary is.")]),s._v(" "),a("p",[s._v("The syntax")]),s._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" expression "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("subquery"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n")])])]),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("TIP")]),s._v(" "),a("p",[s._v("remember that multiple row operators use key words like IN, ANY, ALL, EXISTS")]),s._v(" "),a("p",[s._v("Subqueries are generally executed first and its output then fed to the main or outer query")])]),s._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" lastname "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" employees\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" salary "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" salary "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" employees "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" lastname "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Abel'")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])])]),a("h2",{attrs:{id:"guidelines"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#guidelines"}},[s._v("#")]),s._v(" Guidelines")]),s._v(" "),a("p",[s._v("Generally we:")]),s._v(" "),a("ul",[a("li",[s._v("enclose subqueries in parantheses.")]),s._v(" "),a("li",[s._v("place subqueries on the right side of the comparison condition")]),s._v(" "),a("li",[s._v("order by clause in the subquery is not needed unless you are doing Top-N analysis")]),s._v(" "),a("li",[s._v("Use single-row operators with single-row subqueries, use multi-row operators with multi-row subqueries.")])]),s._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("---while you can do this, dont")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SELECT")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" employees\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WHERE")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" salary "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" employees "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" last_name "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Abel'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" salary\n")])])]),a("h2",{attrs:{id:"examples"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#examples"}},[s._v("#")]),s._v(" Examples")]),s._v(" "),a("p",[s._v("Display the employees id whose job id is the same as employee 141")]),s._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" lastname"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" jobid "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" employees\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" jobid "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" jobid "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" employees "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" employeeid "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("141")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])])]),a("p",[s._v("When you are writing queries, write the inner most to see if what it returns is what you need.")]),s._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" lastname"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" jobid"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" salary "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" employees\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" jobid "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" jobid "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" employees "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" employeeid "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("141")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("and")]),s._v(" salary "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" salary "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" employees "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" employeesid "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("143")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n")])])]),a("h2",{attrs:{id:"more-examples"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#more-examples"}},[s._v("#")]),s._v(" more examples")]),s._v(" "),a("p",[s._v("Display the lastname jobid salary of all employees whose salary is = to the min salary of all employees")]),s._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" lastname"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" jobid"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" salary "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" employees\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v("  salary "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("min")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("salary"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" employees"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])])]),a("h2",{attrs:{id:"multi-row-subqueries"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#multi-row-subqueries"}},[s._v("#")]),s._v(" multi-row subqueries")]),s._v(" "),a("p",[s._v("Display all the departments with min salary greater than department 50's min salary")]),s._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[s._v("\nselet departmentid"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("min")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("salary"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" employees\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("group")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v(" departmentid\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("having")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("min")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("salary"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("min")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("salary"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" employees\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" departmentid "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("50")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])])]),a("p",[s._v("Find the job with th lowest average salary. Display the job id and that average salary")]),s._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" jobid"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("avg")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("salary"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" employees\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("group")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v(" jobid\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("having")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("avg")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("salary"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("min")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("avg")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("salary"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" employees\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("group")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v(" jobid\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("--- alternatively")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" jobid"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("avg")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("salary"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" employees "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("group")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v(" jobid\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("avg")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("salary"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("in")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("min")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("avg")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("salary"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" employees\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("group")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v(" jobid"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])])]),a("p",[s._v("When you group by there is an implication that there will be multiple rows returned. Therefore, you cannot use where expr = (multi values)")]),s._v(" "),a("h2",{attrs:{id:"multi-row-subqueries-cont"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#multi-row-subqueries-cont"}},[s._v("#")]),s._v(" multi row subqueries cont.")]),s._v(" "),a("p",[s._v("To use a subquery that returns more than one row you need to use a multi row operator")]),s._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" departmentid"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" employeeid"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" lastname"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" salary "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" employees\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" salary "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("in")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("min")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("salary"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" employees\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("group")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v(" departmentid\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])])]),a("h2",{attrs:{id:"using-any-operator"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#using-any-operator"}},[s._v("#")]),s._v(" using ANY operator")]),s._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" employeeid"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" lastname"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" jobid"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" salary\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" employees\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" salary "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("any")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" salary "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" employees "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" jobid "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'it_prog'")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("and")]),s._v(" jobid "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'it_prog'")]),s._v("\n")])])]),a("h2",{attrs:{id:"using-all-operator"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#using-all-operator"}},[s._v("#")]),s._v(" using ALL operator")]),s._v(" "),a("p",[s._v("the all operator comapres a value to all values returned by subquery")]),s._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" employeeid"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" lastname"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" jobid"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" salary\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" employees\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" salary "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("all")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" salary "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" employee\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" jobid "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'it_prog'")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("any")]),s._v(" jobid "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("not")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'it_prog'")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- checks to see if salary is under the lowest salary returned by subquery")]),s._v("\n")])])]),a("div",{staticClass:"custom-block warning"},[a("p",{staticClass:"custom-block-title"},[s._v("WARNING")]),s._v(" "),a("p",[s._v("NOT IN")]),s._v(" "),a("p",[s._v("If one of the condition is a NULL value. The entire query returns no rows.\nThe problem is the NOT IN. The NOT IN is equivalent to !ALL")]),s._v(" "),a("p",[s._v("All conditions that compare a NULL value returns a NULL")])]),s._v(" "),a("h3",{attrs:{id:"in-works-with-nulls"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#in-works-with-nulls"}},[s._v("#")]),s._v(" IN works with NULLS")]),s._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" lastname "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" employees emp\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" emp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("employeeid "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("in")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" mgr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("managerid "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" employees mgr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])])]),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[s._v("In is equiv to ANY")]),s._v(" "),a("p",[s._v("We could have added a where clause in the subquery - where managerid is NOT NULL")])]),s._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" lastname "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" employees emp\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" emp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("employeeid "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("in")]),s._v("\n\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" mgr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("managerid "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" employees mgr\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" managerid "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("is")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("not")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("null")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])])]),a("h2",{attrs:{id:"example-with-prompt"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#example-with-prompt"}},[s._v("#")]),s._v(" Example with Prompt")]),s._v(" "),a("p",[s._v("Prompt the user for employee last name. The query will return lastname and hiredate of any employee in the same department as the name supplied. Do not include the employee supplied")]),s._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" lastname"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" departmentid "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" employees\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" departmentid "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" departmentid "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" employees\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" lastname "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" upper"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'&&Name'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("and")]),s._v(" upper"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("lastname"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!=")]),s._v(" upper"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'&Name'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\nUNDEFINE NAME"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n")])])]),a("h2",{attrs:{id:"multiple-column-sub-query"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#multiple-column-sub-query"}},[s._v("#")]),s._v(" Multiple Column sub query")]),s._v(" "),a("p",[s._v("A multi column subquery returns more than 1 column to the outer query and can be listed in the outer query's from, where or having clause.")]),s._v(" "),a("p",[s._v("For example, the below query shows the employee or employees in each department whose current salary is lowest in the department.")]),s._v(" "),a("div",{staticClass:"language-sql extra-class"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" lastname"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" departmentid"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" salary\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" employees\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("departmentid"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" salary"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("in")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" departmentid"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("min")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("salary"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" employees\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("group")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("by")]),s._v(" departmentid\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n\nThe sub query "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("returns")]),s._v(" the "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("following")]),s._v(":\nDEPARTMENT_ID "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("MIN")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("SALARY"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("------------- -----------")]),s._v("\n           "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v("        "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4400")]),s._v("\n           "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),s._v("        "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("6000")]),s._v("\n           "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("50")]),s._v("        "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2500")]),s._v("\n           "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("60")]),s._v("        "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4200")]),s._v("\n           "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),s._v("        "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("8600")]),s._v("\n           "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("90")]),s._v("       "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("17000")]),s._v("\n          "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("110")]),s._v("        "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("8300")]),s._v("\n                     "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("7000")]),s._v("\n\n\nThe "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("full")]),s._v(" query "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("returns")]),s._v("\nLAST_NAME                 DEPARTMENT_ID     SALARY\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("------------------------- ------------- ----------")]),s._v("\nWhalen                               "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v("       "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4400")]),s._v("\nFay                                  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),s._v("       "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("6000")]),s._v("\nVargas                               "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("50")]),s._v("       "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2500")]),s._v("\nLorentz                              "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("60")]),s._v("       "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4200")]),s._v("\nTaylor                               "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),s._v("       "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("8600")]),s._v("\nKochhar                              "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("90")]),s._v("      "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("17000")]),s._v("\nDe Haan                              "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("90")]),s._v("      "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("17000")]),s._v("\nGietz                               "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("110")]),s._v("       "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("8300")]),s._v("\n\n")])])])])}),[],!1,null,null,null);t.default=r.exports}}]);